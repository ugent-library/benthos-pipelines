input:
  label: ""
  ldap:
    url: "${LDAP_URL}"
    username: "${LDAP_USERNAME}"
    password: "${LDAP_PASSWORD}"
    base: "ou=people,dc=ugent,dc=be"
    filter: "(|(objectclass=ugentEmployee)(objectclass=uzEmployee)(objectclass=ugentFormerEmployee)(objectclass=ugentSenior)(objectclass=ugentStudent)(objectclass=ugentUCTStudent)(objectclass=ugentExCoStudent)(objectclass=ugentFormerStudent)(ugentextcategorycode=alum))"
    attributes:
      - "objectClass"
      - "uid"
      - "ugentPreferredSn"
      - "ugentPreferredGivenName"
      - "ugentID"
      - "ugentHistoricIDs"
      - "ugentBirthDate"
      - "mail"
      - "ugentBarcode"
      - "ugentJobCategory"
      - "ugentAddressingTitle"
      - "displayName"
      - "departmentNumber"
      - "ugentFaculty"

pipeline:
  processors:
    - bloblang: |
        root.active = true

        root.identifiers = []
        root.attributes = []

        root.name = if this.exists("displayName") {
          this.displayName.0
        }
        root.givenName = if this.exists("ugentPreferredGivenName") {
          this.ugentPreferredGivenName.0
        }
        root.familyName = if this.exists("ugentPreferredSn") {
          this.ugentPreferredSn.0
        }
        root.honorificPrefix = if this.exists("ugentAddressingTitle") {
          this.ugentAddressingTitle.0
        }
        root.email = if this.exists("mail") {
          this.mail.0
        }
        root.username = if this.exists("uid") {
          this.uid.0
        }

        root.identifiers = root.identifiers.merge(this.ugentID.map_each(val -> {
            "type": "ugentID",
            "value": val
        }))
        root.identifiers = if this.exists("ugentHistoricIDs") {
          root.identifiers.merge(this.ugentHistoricIDs.map_each(val -> {
            "type": "ugentHistoricID",
            "value": val
          }))
        }

        root.attributes = if this.exists("ugentBarcode") {
          root.attributes.merge(this.ugentBarcode.map_each(val -> {
            "scope": "ldap",
            "key": "ugentBarcode",
            "value": val
          }))
        }
        root.attributes = if this.exists("ugentBirthDate") {
          root.attributes.append({
            "scope": "ldap",
            "key": "birthDate",
            "value": this.ugentBirthDate.0
          })
        }
        root.attributes = root.attributes.merge(this.objectClass.map_each(val -> {
            "scope": "ldap",
            "key": "objectClass",
            "value": val
        }))
        root.attributes = if this.exists("ugentFaculty") {
          root.attributes.merge(this.ugentFaculty.map_each(val -> {
            "scope": "ldap",
            "key": "ugentOrganizationID",
            "value": val
          }))
        }
        root.attributes = if this.exists("departmentNumber") {
          root.attributes.merge(this.departmentNumber.map_each(val -> {
            "scope": "ldap",
            "key": "ugentOrganizationID",
            "value": val
          }))
        }
        root.attributes = if this.exists("ugentJobCategory") {
          root.attributes.merge(this.ugentJobCategory.map_each(val -> {
            "scope": "ldap",
            "key": "ugentJobCategory",
            "value": val
          }))
        }